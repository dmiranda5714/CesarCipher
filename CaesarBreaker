/**
 * Write a description of CaesarBreaker here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class CaesarBreaker {
    public int[] countLetters(String message) {
            String alph = "abcdefghijklmnopqrstuvwxyz";
            int[] counts = new int[26];
            for(int k = 0; k < message.length(); k++) {
                char ch = Character.toLowerCase(message.charAt(k));
                int index = alph.indexOf(ch);
                if (index!= -1) {
                    counts[index] += 1;
                }
            }
            return counts;
        }
    public int indexOfMax(int values[]) {
        int index = 0;
        for(int i = 0; i < values.length; i++) {
            if(values[i] > values[index]) {
                index = i;
            }
        }
    return index ;
}  
    public String halfOfString(String message, int start) {
    
        String answer = "";
        for(int k = start; k < message.length(); k+=2) {
        answer = answer + message.charAt(k);
        }
    return answer;
    }
    
    public int getKey(String s) {
    
    CeasarCipher cc = new CeasarCipher();
    int[] freqs = countLetters(s);
    int maxDex = indexOfMax(freqs);
    System.out.println("The max Index is " + maxDex);
    int dkey = maxDex - 4;
    
         if (maxDex < 4) {
           dkey = 26 - (4 - maxDex);
         }
    System.out.println("The decrypt key is " + dkey);
    return dkey;
    }
    
    
    public String decrypt (String encrypted) {
    
         CeasarCipher cc = new CeasarCipher();
         int[] freqs = countLetters(encrypted);
         int maxDex = indexOfMax(freqs);
         System.out.println("The max index is " + maxDex);
         int dkey = maxDex - 4;
         if (maxDex < 4) {
           dkey = 26 - (4 - maxDex);
         }
         System.out.println("The decrypt key is " + dkey);
         return cc.encrypt(encrypted,26 - dkey);
     }
     
     public void decryptTwoKeys(String encrypted) {
         CeasarCipher cc = new CeasarCipher();
         String firstString = halfOfString(encrypted, 0);
         String secondString = halfOfString(encrypted, 1);
         
         int firstKey = getKey(firstString);
         int secondKey = getKey(secondString);
         
         System.out.println("The first key is " + firstKey);
         System.out.println("The second key is " + secondKey);
         
         
         String decrypted = cc.encryptTwoKeys(encrypted, 26 - firstKey, 6);
         System.out.println(decrypted);
     }
     
     public void testDecrypt () {
     //String decrypted = decrypt("Top ncmy qkff vi vguv vbg ycpx");
     //("Just a test string with lots of eeeeeeeeeeeeeeeees");
     //System.out.println("The decrypted message is " + decrypted);
     //String newString = halfOfString("Qbkm Zgis", 1);
     //System.out.println(newString);
     
     decryptTwoKeys("Akag tjw Xibhr awoa aoee xakex znxag xwko");
      
     }
}
